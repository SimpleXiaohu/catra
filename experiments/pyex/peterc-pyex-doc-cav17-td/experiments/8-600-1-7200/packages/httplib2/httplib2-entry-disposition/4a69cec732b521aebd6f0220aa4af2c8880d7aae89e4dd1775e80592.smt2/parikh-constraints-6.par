// Length abstraction satisfiability problem, generated by OSTRICH

counter int aut_len_cnt_2, aut_len_cnt_1, value1_len, all_3_0, aut_len_cnt_9, aut_len_cnt_8, aut_len_cnt_7, aut_len_cnt_6, aut_len_cnt_5, all_1_1_len, all_5_2_len, aut_len_cnt_45, aut_len_cnt_44, aut_len_cnt_43, aut_len_cnt_42, aut_len_cnt_41, aut_len_cnt_40, aut_len_cnt_39, aut_len_cnt_38, aut_len_cnt_37, aut_len_cnt_36, aut_len_cnt_35, aut_len_cnt_34, aut_len_cnt_33, aut_len_cnt_32, aut_len_cnt_31, aut_len_cnt_30, aut_len_cnt_29, aut_len_cnt_28, aut_len_cnt_27, aut_len_cnt_26, aut_len_cnt_25, aut_len_cnt_24, aut_len_cnt_23, aut_len_cnt_22, aut_len_cnt_21, aut_len_cnt_20, aut_len_cnt_19, aut_len_cnt_18, aut_len_cnt_17, aut_len_cnt_16, aut_len_cnt_15, aut_len_cnt_14, aut_len_cnt_13, aut_len_cnt_12, aut_len_cnt_11, value2_len, all_5_0_len, aut_len_cnt_53, aut_len_cnt_52, aut_len_cnt_51, aut_len_cnt_50, aut_len_cnt_49, all_1_0_len;

synchronised {  // Automata constraining value1
automaton Aut_value1_0 {
  init s0;
  s0 -> s0 [0, 60] {value1_len += 1};
  s0 -> s0 [62, 65535] {value1_len += 1};
  accepting s0;
};
automaton Aut_value1_1 {
  init s0;
  s0 -> s0 [0, 43] {aut_len_cnt_1 += 1};
  s0 -> s0 [45, 65535] {aut_len_cnt_1 += 1};
  accepting s0;
};
automaton Aut_value1_2 {
  init s0;
  s0 -> s1 [0, 65535] {aut_len_cnt_2 += 1};
  s1 -> s1 [0, 65535] {aut_len_cnt_2 += 1};
  accepting s1;
};
};
synchronised {  // Automata constraining all_5_0
automaton Aut_all_5_0_3 {
  init s0;
  s0 -> s0 [0, 65535] {all_5_0_len += 1};
  accepting s0;
};
};
synchronised {  // Automata constraining all_1_1
automaton Aut_all_1_1_4 {
  init s0;
  s0 -> s1 [0, 11] {all_1_1_len += 1};
  s0 -> s2 [12, 12] {all_1_1_len += 1};
  s0 -> s1 [13, 65535] {all_1_1_len += 1};
  s1 -> s1 [0, 65535] {all_1_1_len += 1};
  s2 -> s1 [0, 65535] {all_1_1_len += 1};
  accepting s0, s1;
};
automaton Aut_all_1_1_5 {
  init s0;
  s0 -> s1 [0, 10] {aut_len_cnt_5 += 1};
  s0 -> s2 [11, 11] {aut_len_cnt_5 += 1};
  s0 -> s1 [12, 65535] {aut_len_cnt_5 += 1};
  s1 -> s1 [0, 65535] {aut_len_cnt_5 += 1};
  s2 -> s1 [0, 65535] {aut_len_cnt_5 += 1};
  accepting s0, s1;
};
automaton Aut_all_1_1_6 {
  init s0;
  s0 -> s1 [0, 12] {aut_len_cnt_6 += 1};
  s0 -> s2 [13, 13] {aut_len_cnt_6 += 1};
  s0 -> s1 [14, 65535] {aut_len_cnt_6 += 1};
  s1 -> s1 [0, 65535] {aut_len_cnt_6 += 1};
  s2 -> s1 [0, 65535] {aut_len_cnt_6 += 1};
  accepting s0, s1;
};
automaton Aut_all_1_1_7 {
  init s0;
  s0 -> s1 [0, 9] {aut_len_cnt_7 += 1};
  s0 -> s2 [10, 10] {aut_len_cnt_7 += 1};
  s0 -> s1 [11, 65535] {aut_len_cnt_7 += 1};
  s1 -> s1 [0, 65535] {aut_len_cnt_7 += 1};
  s2 -> s1 [0, 65535] {aut_len_cnt_7 += 1};
  accepting s0, s1;
};
automaton Aut_all_1_1_8 {
  init s0;
  s0 -> s1 [0, 8] {aut_len_cnt_8 += 1};
  s0 -> s2 [9, 9] {aut_len_cnt_8 += 1};
  s0 -> s1 [10, 65535] {aut_len_cnt_8 += 1};
  s1 -> s1 [0, 65535] {aut_len_cnt_8 += 1};
  s2 -> s1 [0, 65535] {aut_len_cnt_8 += 1};
  accepting s0, s1;
};
automaton Aut_all_1_1_9 {
  init s0;
  s0 -> s1 [0, 31] {aut_len_cnt_9 += 1};
  s0 -> s2 [32, 32] {aut_len_cnt_9 += 1};
  s0 -> s1 [33, 65535] {aut_len_cnt_9 += 1};
  s1 -> s1 [0, 65535] {aut_len_cnt_9 += 1};
  s2 -> s1 [0, 65535] {aut_len_cnt_9 += 1};
  accepting s0, s1;
};
};
synchronised {  // Automata constraining value2
automaton Aut_value2_10 {
  init s0;
  s0 -> s0 [0, 89] {value2_len += 1};
  s0 -> s0 [91, 65535] {value2_len += 1};
  accepting s0;
};
automaton Aut_value2_11 {
  init s0;
  s0 -> s0 [0, 88] {aut_len_cnt_11 += 1};
  s0 -> s0 [90, 65535] {aut_len_cnt_11 += 1};
  accepting s0;
};
automaton Aut_value2_12 {
  init s0;
  s0 -> s0 [0, 87] {aut_len_cnt_12 += 1};
  s0 -> s0 [89, 65535] {aut_len_cnt_12 += 1};
  accepting s0;
};
automaton Aut_value2_13 {
  init s0;
  s0 -> s0 [0, 86] {aut_len_cnt_13 += 1};
  s0 -> s0 [88, 65535] {aut_len_cnt_13 += 1};
  accepting s0;
};
automaton Aut_value2_14 {
  init s0;
  s0 -> s0 [0, 85] {aut_len_cnt_14 += 1};
  s0 -> s0 [87, 65535] {aut_len_cnt_14 += 1};
  accepting s0;
};
automaton Aut_value2_15 {
  init s0;
  s0 -> s0 [0, 84] {aut_len_cnt_15 += 1};
  s0 -> s0 [86, 65535] {aut_len_cnt_15 += 1};
  accepting s0;
};
automaton Aut_value2_16 {
  init s0;
  s0 -> s0 [0, 83] {aut_len_cnt_16 += 1};
  s0 -> s0 [85, 65535] {aut_len_cnt_16 += 1};
  accepting s0;
};
automaton Aut_value2_17 {
  init s0;
  s0 -> s0 [0, 82] {aut_len_cnt_17 += 1};
  s0 -> s0 [84, 65535] {aut_len_cnt_17 += 1};
  accepting s0;
};
automaton Aut_value2_18 {
  init s0;
  s0 -> s0 [0, 81] {aut_len_cnt_18 += 1};
  s0 -> s0 [83, 65535] {aut_len_cnt_18 += 1};
  accepting s0;
};
automaton Aut_value2_19 {
  init s0;
  s0 -> s0 [0, 80] {aut_len_cnt_19 += 1};
  s0 -> s0 [82, 65535] {aut_len_cnt_19 += 1};
  accepting s0;
};
automaton Aut_value2_20 {
  init s0;
  s0 -> s0 [0, 79] {aut_len_cnt_20 += 1};
  s0 -> s0 [81, 65535] {aut_len_cnt_20 += 1};
  accepting s0;
};
automaton Aut_value2_21 {
  init s0;
  s0 -> s0 [0, 78] {aut_len_cnt_21 += 1};
  s0 -> s0 [80, 65535] {aut_len_cnt_21 += 1};
  accepting s0;
};
automaton Aut_value2_22 {
  init s0;
  s0 -> s0 [0, 77] {aut_len_cnt_22 += 1};
  s0 -> s0 [79, 65535] {aut_len_cnt_22 += 1};
  accepting s0;
};
automaton Aut_value2_23 {
  init s0;
  s0 -> s0 [0, 76] {aut_len_cnt_23 += 1};
  s0 -> s0 [78, 65535] {aut_len_cnt_23 += 1};
  accepting s0;
};
automaton Aut_value2_24 {
  init s0;
  s0 -> s0 [0, 75] {aut_len_cnt_24 += 1};
  s0 -> s0 [77, 65535] {aut_len_cnt_24 += 1};
  accepting s0;
};
automaton Aut_value2_25 {
  init s0;
  s0 -> s0 [0, 74] {aut_len_cnt_25 += 1};
  s0 -> s0 [76, 65535] {aut_len_cnt_25 += 1};
  accepting s0;
};
automaton Aut_value2_26 {
  init s0;
  s0 -> s0 [0, 73] {aut_len_cnt_26 += 1};
  s0 -> s0 [75, 65535] {aut_len_cnt_26 += 1};
  accepting s0;
};
automaton Aut_value2_27 {
  init s0;
  s0 -> s0 [0, 72] {aut_len_cnt_27 += 1};
  s0 -> s0 [74, 65535] {aut_len_cnt_27 += 1};
  accepting s0;
};
automaton Aut_value2_28 {
  init s0;
  s0 -> s0 [0, 71] {aut_len_cnt_28 += 1};
  s0 -> s0 [73, 65535] {aut_len_cnt_28 += 1};
  accepting s0;
};
automaton Aut_value2_29 {
  init s0;
  s0 -> s0 [0, 70] {aut_len_cnt_29 += 1};
  s0 -> s0 [72, 65535] {aut_len_cnt_29 += 1};
  accepting s0;
};
automaton Aut_value2_30 {
  init s0;
  s0 -> s0 [0, 69] {aut_len_cnt_30 += 1};
  s0 -> s0 [71, 65535] {aut_len_cnt_30 += 1};
  accepting s0;
};
automaton Aut_value2_31 {
  init s0;
  s0 -> s0 [0, 68] {aut_len_cnt_31 += 1};
  s0 -> s0 [70, 65535] {aut_len_cnt_31 += 1};
  accepting s0;
};
automaton Aut_value2_32 {
  init s0;
  s0 -> s0 [0, 67] {aut_len_cnt_32 += 1};
  s0 -> s0 [69, 65535] {aut_len_cnt_32 += 1};
  accepting s0;
};
automaton Aut_value2_33 {
  init s0;
  s0 -> s0 [0, 66] {aut_len_cnt_33 += 1};
  s0 -> s0 [68, 65535] {aut_len_cnt_33 += 1};
  accepting s0;
};
automaton Aut_value2_34 {
  init s0;
  s0 -> s0 [0, 65] {aut_len_cnt_34 += 1};
  s0 -> s0 [67, 65535] {aut_len_cnt_34 += 1};
  accepting s0;
};
automaton Aut_value2_35 {
  init s0;
  s0 -> s0 [0, 64] {aut_len_cnt_35 += 1};
  s0 -> s0 [66, 65535] {aut_len_cnt_35 += 1};
  accepting s0;
};
automaton Aut_value2_36 {
  init s0;
  s0 -> s0 [0, 60] {aut_len_cnt_36 += 1};
  s0 -> s0 [62, 65535] {aut_len_cnt_36 += 1};
  accepting s0;
};
automaton Aut_value2_37 {
  init s0;
  s0 -> s0 [0, 43] {aut_len_cnt_37 += 1};
  s0 -> s0 [45, 65535] {aut_len_cnt_37 += 1};
  accepting s0;
};
automaton Aut_value2_38 {
  init s0;
  s0 -> s1 [0, 65535] {aut_len_cnt_38 += 1};
  s1 -> s1 [0, 65535] {aut_len_cnt_38 += 1};
  accepting s1;
};
automaton Aut_value2_39 {
  init s0;
  s0 -> s0 [0, 11] {aut_len_cnt_39 += 1};
  s0 -> s1 [12, 12] {aut_len_cnt_39 += 1};
  s0 -> s0 [13, 65535] {aut_len_cnt_39 += 1};
  s1 -> s0 [0, 11] {aut_len_cnt_39 += 1};
  s1 -> s1 [12, 12] {aut_len_cnt_39 += 1};
  s1 -> s0 [13, 65535] {aut_len_cnt_39 += 1};
  accepting s0;
};
automaton Aut_value2_40 {
  init s0;
  s0 -> s0 [0, 10] {aut_len_cnt_40 += 1};
  s0 -> s1 [11, 11] {aut_len_cnt_40 += 1};
  s0 -> s0 [12, 65535] {aut_len_cnt_40 += 1};
  s1 -> s0 [0, 10] {aut_len_cnt_40 += 1};
  s1 -> s1 [11, 11] {aut_len_cnt_40 += 1};
  s1 -> s0 [12, 65535] {aut_len_cnt_40 += 1};
  accepting s0;
};
automaton Aut_value2_41 {
  init s0;
  s0 -> s0 [0, 12] {aut_len_cnt_41 += 1};
  s0 -> s1 [13, 13] {aut_len_cnt_41 += 1};
  s0 -> s0 [14, 65535] {aut_len_cnt_41 += 1};
  s1 -> s0 [0, 12] {aut_len_cnt_41 += 1};
  s1 -> s1 [13, 13] {aut_len_cnt_41 += 1};
  s1 -> s0 [14, 65535] {aut_len_cnt_41 += 1};
  accepting s0;
};
automaton Aut_value2_42 {
  init s0;
  s0 -> s0 [0, 9] {aut_len_cnt_42 += 1};
  s0 -> s1 [10, 10] {aut_len_cnt_42 += 1};
  s0 -> s0 [11, 65535] {aut_len_cnt_42 += 1};
  s1 -> s0 [0, 9] {aut_len_cnt_42 += 1};
  s1 -> s1 [10, 10] {aut_len_cnt_42 += 1};
  s1 -> s0 [11, 65535] {aut_len_cnt_42 += 1};
  accepting s0;
};
automaton Aut_value2_43 {
  init s0;
  s0 -> s0 [0, 8] {aut_len_cnt_43 += 1};
  s0 -> s1 [9, 9] {aut_len_cnt_43 += 1};
  s0 -> s0 [10, 65535] {aut_len_cnt_43 += 1};
  s1 -> s0 [0, 8] {aut_len_cnt_43 += 1};
  s1 -> s1 [9, 9] {aut_len_cnt_43 += 1};
  s1 -> s0 [10, 65535] {aut_len_cnt_43 += 1};
  accepting s0;
};
automaton Aut_value2_44 {
  init s0;
  s0 -> s0 [0, 31] {aut_len_cnt_44 += 1};
  s0 -> s1 [32, 32] {aut_len_cnt_44 += 1};
  s0 -> s0 [33, 65535] {aut_len_cnt_44 += 1};
  s1 -> s0 [0, 31] {aut_len_cnt_44 += 1};
  s1 -> s1 [32, 32] {aut_len_cnt_44 += 1};
  s1 -> s0 [33, 65535] {aut_len_cnt_44 += 1};
  accepting s0;
};
automaton Aut_value2_45 {
  init s0;
  s0 -> s1 [0, 11] {aut_len_cnt_45 += 1};
  s0 -> s1 [13, 65535] {aut_len_cnt_45 += 1};
  s1 -> s1 [0, 65535] {aut_len_cnt_45 += 1};
  accepting s0, s1;
};
};
synchronised {  // Automata constraining all_5_2
automaton Aut_all_5_2_46 {
  init s0;
  s0 -> s0 [0, 65535] {all_5_2_len += 1};
  accepting s0;
};
};
synchronised {  // Automata constraining all_5_1
automaton Aut_all_5_1_47 {
  init s0;
  s0 -> s0 [0, 60] {all_3_0 += 1};
  s0 -> s0 [62, 65535] {all_3_0 += 1};
  accepting s0;
};
};
synchronised {  // Automata constraining all_1_0
automaton Aut_all_1_0_48 {
  init s0;
  s0 -> s1 [0, 11] {all_1_0_len += 1};
  s0 -> s2 [12, 12] {all_1_0_len += 1};
  s0 -> s1 [13, 65535] {all_1_0_len += 1};
  s1 -> s1 [0, 65535] {all_1_0_len += 1};
  s2 -> s1 [0, 65535] {all_1_0_len += 1};
  accepting s0, s1;
};
automaton Aut_all_1_0_49 {
  init s0;
  s0 -> s1 [0, 10] {aut_len_cnt_49 += 1};
  s0 -> s2 [11, 11] {aut_len_cnt_49 += 1};
  s0 -> s1 [12, 65535] {aut_len_cnt_49 += 1};
  s1 -> s1 [0, 65535] {aut_len_cnt_49 += 1};
  s2 -> s1 [0, 65535] {aut_len_cnt_49 += 1};
  accepting s0, s1;
};
automaton Aut_all_1_0_50 {
  init s0;
  s0 -> s1 [0, 12] {aut_len_cnt_50 += 1};
  s0 -> s2 [13, 13] {aut_len_cnt_50 += 1};
  s0 -> s1 [14, 65535] {aut_len_cnt_50 += 1};
  s1 -> s1 [0, 65535] {aut_len_cnt_50 += 1};
  s2 -> s1 [0, 65535] {aut_len_cnt_50 += 1};
  accepting s0, s1;
};
automaton Aut_all_1_0_51 {
  init s0;
  s0 -> s1 [0, 9] {aut_len_cnt_51 += 1};
  s0 -> s2 [10, 10] {aut_len_cnt_51 += 1};
  s0 -> s1 [11, 65535] {aut_len_cnt_51 += 1};
  s1 -> s1 [0, 65535] {aut_len_cnt_51 += 1};
  s2 -> s1 [0, 65535] {aut_len_cnt_51 += 1};
  accepting s0, s1;
};
automaton Aut_all_1_0_52 {
  init s0;
  s0 -> s1 [0, 8] {aut_len_cnt_52 += 1};
  s0 -> s2 [9, 9] {aut_len_cnt_52 += 1};
  s0 -> s1 [10, 65535] {aut_len_cnt_52 += 1};
  s1 -> s1 [0, 65535] {aut_len_cnt_52 += 1};
  s2 -> s1 [0, 65535] {aut_len_cnt_52 += 1};
  accepting s0, s1;
};
automaton Aut_all_1_0_53 {
  init s0;
  s0 -> s1 [0, 31] {aut_len_cnt_53 += 1};
  s0 -> s2 [32, 32] {aut_len_cnt_53 += 1};
  s0 -> s1 [33, 65535] {aut_len_cnt_53 += 1};
  s1 -> s1 [0, 65535] {aut_len_cnt_53 += 1};
  s2 -> s1 [0, 65535] {aut_len_cnt_53 += 1};
  accepting s0, s1;
};
};

constraint value1_len = aut_len_cnt_2 && value1_len = aut_len_cnt_1;
constraint all_1_1_len = aut_len_cnt_9 && all_1_1_len = aut_len_cnt_8 && all_1_1_len = aut_len_cnt_7 && all_1_1_len = aut_len_cnt_6 && all_1_1_len = aut_len_cnt_5;
constraint value2_len = aut_len_cnt_45 && value2_len = aut_len_cnt_44 && value2_len = aut_len_cnt_43 && value2_len = aut_len_cnt_42 && value2_len = aut_len_cnt_41 && value2_len = aut_len_cnt_40 && value2_len = aut_len_cnt_39 && value2_len = aut_len_cnt_38 && value2_len = aut_len_cnt_37 && value2_len = aut_len_cnt_36 && value2_len = aut_len_cnt_35 && value2_len = aut_len_cnt_34 && value2_len = aut_len_cnt_33 && value2_len = aut_len_cnt_32 && value2_len = aut_len_cnt_31 && value2_len = aut_len_cnt_30 && value2_len = aut_len_cnt_29 && value2_len = aut_len_cnt_28 && value2_len = aut_len_cnt_27 && value2_len = aut_len_cnt_26 && value2_len = aut_len_cnt_25 && value2_len = aut_len_cnt_24 && value2_len = aut_len_cnt_23 && value2_len = aut_len_cnt_22 && value2_len = aut_len_cnt_21 && value2_len = aut_len_cnt_20 && value2_len = aut_len_cnt_19 && value2_len = aut_len_cnt_18 && value2_len = aut_len_cnt_17 && value2_len = aut_len_cnt_16 && value2_len = aut_len_cnt_15 && value2_len = aut_len_cnt_14 && value2_len = aut_len_cnt_13 && value2_len = aut_len_cnt_12 && value2_len = aut_len_cnt_11;
constraint all_1_0_len = aut_len_cnt_53 && all_1_0_len = aut_len_cnt_52 && all_1_0_len = aut_len_cnt_51 && all_1_0_len = aut_len_cnt_50 && all_1_0_len = aut_len_cnt_49;
constraint (all_3_0 >= 0);
