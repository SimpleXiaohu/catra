// Length abstraction satisfiability problem, generated by OSTRICH

counter int aut_len_cnt_16, aut_len_cnt_15, aut_len_cnt_14, all_5_2_len, aut_len_cnt_12, aut_len_cnt_11, aut_len_cnt_10, all_5_0_len, aut_len_cnt_4, aut_len_cnt_3, aut_len_cnt_2, all_3_0, aut_len_cnt_8, aut_len_cnt_7, aut_len_cnt_6, uri_len, all_1_0_len;

synchronised {  // Automata constraining all_1_0
automaton Aut_all_1_0_0 {
  init s0;
  s0 -> s1 [0, 90] {all_1_0_len += 1};
  s0 -> s2 [91, 91] {all_1_0_len += 1};
  s0 -> s1 [92, 65535] {all_1_0_len += 1};
  s1 -> s1 [0, 65535] {all_1_0_len += 1};
  s2 -> s1 [0, 65535] {all_1_0_len += 1};
  accepting s0, s1;
};
};
synchronised {  // Automata constraining all_5_1
automaton Aut_all_5_1_1 {
  init s0;
  s0 -> s0 [0, 57] {all_3_0 += 1};
  s0 -> s0 [59, 65535] {all_3_0 += 1};
  accepting s0;
};
automaton Aut_all_5_1_2 {
  init s0;
  s0 -> s0 [0, 57] {aut_len_cnt_2 += 1};
  s0 -> s1 [58, 58] {aut_len_cnt_2 += 1};
  s0 -> s0 [59, 65535] {aut_len_cnt_2 += 1};
  s1 -> s0 [0, 46] {aut_len_cnt_2 += 1};
  s1 -> s2 [47, 47] {aut_len_cnt_2 += 1};
  s1 -> s0 [48, 57] {aut_len_cnt_2 += 1};
  s1 -> s1 [58, 58] {aut_len_cnt_2 += 1};
  s1 -> s0 [59, 65535] {aut_len_cnt_2 += 1};
  s2 -> s0 [0, 46] {aut_len_cnt_2 += 1};
  s2 -> s0 [48, 57] {aut_len_cnt_2 += 1};
  s2 -> s1 [58, 58] {aut_len_cnt_2 += 1};
  s2 -> s0 [59, 65535] {aut_len_cnt_2 += 1};
  accepting s0;
};
automaton Aut_all_5_1_3 {
  init s0;
  s0 -> s0 [0, 43] {aut_len_cnt_3 += 1};
  s0 -> s0 [45, 65535] {aut_len_cnt_3 += 1};
  accepting s0;
};
automaton Aut_all_5_1_4 {
  init s1;
  s0 -> s0 [0, 65535] {aut_len_cnt_4 += 1};
  s1 -> s0 [0, 65535] {aut_len_cnt_4 += 1};
  accepting s0;
};
};
synchronised {  // Automata constraining uri
automaton Aut_uri_5 {
  init s0;
  s0 -> s0 [0, 57] {uri_len += 1};
  s0 -> s1 [58, 58] {uri_len += 1};
  s0 -> s0 [59, 65535] {uri_len += 1};
  s1 -> s0 [0, 46] {uri_len += 1};
  s1 -> s2 [47, 47] {uri_len += 1};
  s1 -> s0 [48, 57] {uri_len += 1};
  s1 -> s1 [58, 58] {uri_len += 1};
  s1 -> s0 [59, 65535] {uri_len += 1};
  s2 -> s0 [0, 46] {uri_len += 1};
  s2 -> s0 [48, 57] {uri_len += 1};
  s2 -> s1 [58, 58] {uri_len += 1};
  s2 -> s0 [59, 65535] {uri_len += 1};
  accepting s0, s1, s2;
};
automaton Aut_uri_6 {
  init s0;
  s0 -> s0 [0, 43] {aut_len_cnt_6 += 1};
  s0 -> s0 [45, 65535] {aut_len_cnt_6 += 1};
  accepting s0;
};
automaton Aut_uri_7 {
  init s0;
  s0 -> s1 [0, 65535] {aut_len_cnt_7 += 1};
  s1 -> s1 [0, 65535] {aut_len_cnt_7 += 1};
  accepting s1;
};
automaton Aut_uri_8 {
  init s0;
  s0 -> s1 [0, 90] {aut_len_cnt_8 += 1};
  s0 -> s1 [92, 65535] {aut_len_cnt_8 += 1};
  s1 -> s1 [0, 65535] {aut_len_cnt_8 += 1};
  accepting s0, s1;
};
};
synchronised {  // Automata constraining all_5_0
automaton Aut_all_5_0_9 {
  init s2;
  s0 -> s2 [0, 46] {all_5_0_len += 1};
  s0 -> s1 [47, 47] {all_5_0_len += 1};
  s0 -> s2 [48, 57] {all_5_0_len += 1};
  s0 -> s0 [58, 58] {all_5_0_len += 1};
  s0 -> s2 [59, 65535] {all_5_0_len += 1};
  s1 -> s2 [0, 46] {all_5_0_len += 1};
  s1 -> s2 [48, 57] {all_5_0_len += 1};
  s1 -> s0 [58, 58] {all_5_0_len += 1};
  s1 -> s2 [59, 65535] {all_5_0_len += 1};
  s2 -> s2 [0, 57] {all_5_0_len += 1};
  s2 -> s0 [58, 58] {all_5_0_len += 1};
  s2 -> s2 [59, 65535] {all_5_0_len += 1};
  accepting s0;
};
automaton Aut_all_5_0_10 {
  init s0;
  s0 -> s0 [0, 43] {aut_len_cnt_10 += 1};
  s0 -> s0 [45, 65535] {aut_len_cnt_10 += 1};
  accepting s0;
};
automaton Aut_all_5_0_11 {
  init s1;
  s0 -> s0 [0, 65535] {aut_len_cnt_11 += 1};
  s1 -> s0 [0, 65535] {aut_len_cnt_11 += 1};
  accepting s0;
};
automaton Aut_all_5_0_12 {
  init s1;
  s0 -> s0 [0, 65535] {aut_len_cnt_12 += 1};
  s1 -> s0 [0, 90] {aut_len_cnt_12 += 1};
  s1 -> s0 [92, 65535] {aut_len_cnt_12 += 1};
  accepting s0;
};
};
synchronised {  // Automata constraining all_5_2
automaton Aut_all_5_2_13 {
  init s1;
  s0 -> s0 [0, 57] {all_5_2_len += 1};
  s0 -> s1 [58, 58] {all_5_2_len += 1};
  s0 -> s0 [59, 65535] {all_5_2_len += 1};
  s1 -> s0 [0, 46] {all_5_2_len += 1};
  s1 -> s2 [47, 47] {all_5_2_len += 1};
  s1 -> s0 [48, 57] {all_5_2_len += 1};
  s1 -> s1 [58, 58] {all_5_2_len += 1};
  s1 -> s0 [59, 65535] {all_5_2_len += 1};
  s2 -> s0 [0, 46] {all_5_2_len += 1};
  s2 -> s0 [48, 57] {all_5_2_len += 1};
  s2 -> s1 [58, 58] {all_5_2_len += 1};
  s2 -> s0 [59, 65535] {all_5_2_len += 1};
  accepting s0, s1, s2;
};
automaton Aut_all_5_2_14 {
  init s0;
  s0 -> s0 [0, 43] {aut_len_cnt_14 += 1};
  s0 -> s0 [45, 65535] {aut_len_cnt_14 += 1};
  accepting s0;
};
automaton Aut_all_5_2_15 {
  init s0;
  s0 -> s0 [0, 65535] {aut_len_cnt_15 += 1};
  accepting s0;
};
automaton Aut_all_5_2_16 {
  init s0;
  s0 -> s0 [0, 65535] {aut_len_cnt_16 += 1};
  accepting s0;
};
};

constraint all_5_2_len = aut_len_cnt_16 && all_5_2_len = aut_len_cnt_15 && all_5_2_len = aut_len_cnt_14;
constraint all_5_0_len = aut_len_cnt_12 && all_5_0_len = aut_len_cnt_11 && all_5_0_len = aut_len_cnt_10;
constraint all_3_0 = aut_len_cnt_4 && all_3_0 = aut_len_cnt_3 && all_3_0 = aut_len_cnt_2;
constraint uri_len = aut_len_cnt_8 && uri_len = aut_len_cnt_7 && uri_len = aut_len_cnt_6;
constraint (all_3_0 >= 0);
