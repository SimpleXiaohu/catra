// Length abstraction satisfiability problem, generated by OSTRICH

counter int aut_len_cnt_7, aut_len_cnt_6, aut_len_cnt_5, uri_len, all_3_0, all_1_0_len, aut_len_cnt_10, aut_len_cnt_9, all_5_2_len, aut_len_cnt_2, aut_len_cnt_1, all_5_0_len;

synchronised {  // Automata constraining all_5_0
automaton Aut_all_5_0_0 {
  init s0;
  s0 -> s0 [0, 57] {all_5_0_len += 1};
  s0 -> s0 [59, 65535] {all_5_0_len += 1};
  accepting s0;
};
automaton Aut_all_5_0_1 {
  init s0;
  s0 -> s0 [0, 43] {aut_len_cnt_1 += 1};
  s0 -> s0 [45, 65535] {aut_len_cnt_1 += 1};
  accepting s0;
};
automaton Aut_all_5_0_2 {
  init s0;
  accepting s0;
};
};
synchronised {  // Automata constraining all_1_0
automaton Aut_all_1_0_3 {
  init s0;
  s0 -> s1 [0, 90] {all_1_0_len += 1};
  s0 -> s2 [91, 91] {all_1_0_len += 1};
  s0 -> s1 [92, 65535] {all_1_0_len += 1};
  s1 -> s1 [0, 65535] {all_1_0_len += 1};
  s2 -> s1 [0, 65535] {all_1_0_len += 1};
  accepting s0, s1;
};
};
synchronised {  // Automata constraining uri
automaton Aut_uri_4 {
  init s0;
  s0 -> s0 [0, 57] {uri_len += 1};
  s0 -> s0 [59, 65535] {uri_len += 1};
  accepting s0;
};
automaton Aut_uri_5 {
  init s0;
  s0 -> s0 [0, 43] {aut_len_cnt_5 += 1};
  s0 -> s0 [45, 65535] {aut_len_cnt_5 += 1};
  accepting s0;
};
automaton Aut_uri_6 {
  init s0;
  s0 -> s1 [0, 65535] {aut_len_cnt_6 += 1};
  s1 -> s1 [0, 65535] {aut_len_cnt_6 += 1};
  accepting s1;
};
automaton Aut_uri_7 {
  init s0;
  s0 -> s1 [0, 90] {aut_len_cnt_7 += 1};
  s0 -> s1 [92, 65535] {aut_len_cnt_7 += 1};
  s1 -> s1 [0, 65535] {aut_len_cnt_7 += 1};
  accepting s0, s1;
};
};
synchronised {  // Automata constraining all_5_2
automaton Aut_all_5_2_8 {
  init s0;
  s0 -> s0 [0, 57] {all_5_2_len += 1};
  s0 -> s0 [59, 65535] {all_5_2_len += 1};
  accepting s0;
};
automaton Aut_all_5_2_9 {
  init s0;
  s0 -> s0 [0, 43] {aut_len_cnt_9 += 1};
  s0 -> s0 [45, 65535] {aut_len_cnt_9 += 1};
  accepting s0;
};
automaton Aut_all_5_2_10 {
  init s1;
  s0 -> s0 [0, 65535] {aut_len_cnt_10 += 1};
  s1 -> s0 [0, 65535] {aut_len_cnt_10 += 1};
  accepting s0;
};
};
synchronised {  // Automata constraining all_5_1
automaton Aut_all_5_1_11 {
  init s0;
  s0 -> s0 [0, 57] {all_3_0 += 1};
  s0 -> s0 [59, 65535] {all_3_0 += 1};
  accepting s0;
};
};

constraint uri_len = aut_len_cnt_7 && uri_len = aut_len_cnt_6 && uri_len = aut_len_cnt_5;
constraint all_5_2_len = aut_len_cnt_10 && all_5_2_len = aut_len_cnt_9;
constraint all_5_0_len = aut_len_cnt_2 && all_5_0_len = aut_len_cnt_1;
constraint (all_3_0 >= 0);
