// Length abstraction satisfiability problem, generated by OSTRICH

counter int aut_len_cnt_4, aut_len_cnt_3, all_2_0, aut_len_cnt_8, all_4_0_len, aut_len_cnt_6, value2_len, aut_len_cnt_1, all_4_2_len;

synchronised {  // Automata constraining all_4_2
automaton Aut_all_4_2_0 {
  init s0;
  s0 -> s0 [0, 43] {all_4_2_len += 1};
  s0 -> s0 [45, 65535] {all_4_2_len += 1};
  accepting s0;
};
automaton Aut_all_4_2_1 {
  init s0;
  s0 -> s0 [0, 65535] {aut_len_cnt_1 += 1};
  accepting s0;
};
};
synchronised {  // Automata constraining all_4_1
automaton Aut_all_4_1_2 {
  init s0;
  s0 -> s0 [0, 60] {all_2_0 += 1};
  s0 -> s0 [62, 65535] {all_2_0 += 1};
  accepting s0;
};
automaton Aut_all_4_1_3 {
  init s0;
  s0 -> s0 [0, 43] {aut_len_cnt_3 += 1};
  s0 -> s0 [45, 65535] {aut_len_cnt_3 += 1};
  accepting s0;
};
automaton Aut_all_4_1_4 {
  init s1;
  s0 -> s0 [0, 65535] {aut_len_cnt_4 += 1};
  s1 -> s0 [0, 65535] {aut_len_cnt_4 += 1};
  accepting s0;
};
};
synchronised {  // Automata constraining value2
automaton Aut_value2_5 {
  init s0;
  s0 -> s0 [0, 43] {value2_len += 1};
  s0 -> s0 [45, 65535] {value2_len += 1};
  accepting s0;
};
automaton Aut_value2_6 {
  init s0;
  s0 -> s1 [0, 65535] {aut_len_cnt_6 += 1};
  s1 -> s1 [0, 65535] {aut_len_cnt_6 += 1};
  accepting s1;
};
};
synchronised {  // Automata constraining all_4_0
automaton Aut_all_4_0_7 {
  init s0;
  s0 -> s0 [0, 43] {all_4_0_len += 1};
  s0 -> s0 [45, 65535] {all_4_0_len += 1};
  accepting s0;
};
automaton Aut_all_4_0_8 {
  init s1;
  s0 -> s0 [0, 65535] {aut_len_cnt_8 += 1};
  s1 -> s0 [0, 65535] {aut_len_cnt_8 += 1};
  accepting s0;
};
};

constraint all_2_0 = aut_len_cnt_4 && all_2_0 = aut_len_cnt_3;
constraint all_4_0_len = aut_len_cnt_8;
constraint value2_len = aut_len_cnt_6;
constraint all_4_2_len = aut_len_cnt_1;
constraint (all_2_0 >= 0);
